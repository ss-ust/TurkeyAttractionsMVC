@model IEnumerable<TurkeyAttractionsMVC.Models.City>

@{
    ViewData["Title"] = "Cities";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css">
    <style>
        .city-button {
            width: 300px;
            height: 300px;
            margin: 10px;
            background-size: cover;
            background-position: center;
            border: none;
            border-radius: 20px;
            cursor: pointer;
            color: #fff;
            font-weight: bold;
            display: flex;
            align-items: center;
            justify-content: center;
            text-shadow: 1px 1px 0px black, -1px -1px 0px black, -1px 1px 0px black, 1px -1px 0px black;
            -webkit-text-stroke: 0.5px black;
            font-size: 32px;
            transition: transform 0.2s ease;
        }

            .city-button:hover {
                transform: scale(1.1);
            }

        #map {
            width: 100%;
            height: 400px;
            margin-bottom: 20px;
            border-radius: 10px;
        }
    </style>
</head>

<body>
    <div class="container my-4">
        <h1 class="text-center">Cities</h1>

        <!-- Google Map Section -->
        <div id="map"></div>

        <div class="row justify-content-center">
            @foreach (var city in Model)
            {

                <button class="city-button"
                        style="background-image: url('@(!string.IsNullOrEmpty(city.ImageUrl) ? city.ImageUrl : Url.Content("~/assets/img/default.jpg"))');" onclick="navigateToCity('@Url.Action("Details", "Cities", new { id = city.ID })')">
                        @city.Name
                </button>


            }
        </div>
    </div>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDaCQDTgrnb1o2XfDAj7p9z_DvdLcaZ6BU"></script>
    <script>
        let map;
        const cities = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
            Model.Select(c => new { c.Name, c.Lat, c.Lng })
            ));

        function initMap() {
            const defaultCenter = { lat: 39.0, lng: 35.0 }; // Centered on Turkey
            map = new google.maps.Map(document.getElementById("map"), {
                center: defaultCenter,
                zoom: 6,
            });

            cities.forEach(city => {
                const marker = new google.maps.Marker({
                    position: { lat: city.Lat, lng: city.Lng },
                    map: map,
                    title: city.Name
                });

                marker.addListener("click", () => {
                    map.setCenter({ lat: city.Lat, lng: city.Lng });
                    map.setZoom(10);
                });
            });
        }

        function navigateToCity(url) {
            window.location.href = url;
        }

        window.onload = initMap;
    </script>
</body>
</html>
